!to "cbmcrypt", cbm

CHAROUT = $FFD2

!source "platform.a"

; the SYS command jumps to this instruction
jmp entryPoint

!ifdef C64 {
!source "c64.a"
}

!ifdef VIC20 {
!source "vic20.a"
}

!ifdef PLUS4 {
!source "plus4.a"
}

!ifdef C128 {
!source "c128.a"
}

; When targetting the C128 this routine has to reside in memory below $4000
entryPoint
!ifdef TARGET_C128 {
    ; switch out BASIC ROM, because otherwise we do not have enough
    ; RAM ... on the C128 ... !!!!
    lda #%00001110
    sta $D501
    sta $FF01
}
    jmp main

mainDone
!ifdef TARGET_C128 {
    ; turn BASIC ROMs on again
    lda #%00000000
    sta $D501
    sta $FF01
}
    rts

;FAST_MUL = 1
IS_TEST =  1
SHOW_CHECK_VALUE = 1

!zone arith
!source "arith16.a"

!zone string
!source "string.a"

!zone diskio
!source "disk_io.a"

!zone crypto
!source "crypto.a"

!zone repl
!source "repl.a"

main
    lda #NOT_INITIALIZED
    sta ALREADY_INITIALIZED 
    lda #14
    jsr CHAROUT
    lda #147
    jsr CHAROUT
    jsr newCommand
    +load16BitImmediate procVisualizer, PROC_CALLBACK
    jsr progStart
    jsr unsetProcCallback
    lda #142
    jsr CHAROUT

    ; save 2 bytes on Stack for the whole runtime
    ; of cbmcrypt
    jmp mainDone
